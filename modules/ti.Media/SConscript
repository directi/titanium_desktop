#!/usr/bin/env python
import os, os.path as path
Import('build')

env = build.env.Clone();
env.Append(CPPDEFINES = ('TITANIUM_API_EXPORT', 1))
env.Append(CPPPATH = ['#kroll'])
build.add_thirdparty(env, 'poco')

sources = Glob('*.cpp')

if build.is_osx():
	env.Append(FRAMEWORKS = ['Cocoa'])
	sources.extend(Glob('osx/*.cpp'))
	sources.extend(Glob('osx/*.mm'))

if build.is_linux():
	sources.extend(Glob('gst/*.cpp'))
	env.ParseConfig('pkg-config --cflags --libs gstreamer-0.10 gdk-2.0')

elif build.is_win32():
	sources.extend(Glob('win32/*.cpp'))
	libs = [
		'user32', 'shell32', 'kernel32', 'shlwapi',
		'strmiids','ole32', 'comdlg32', 'comctl32',
		'oleaut32', 'comsuppw', 'khost']
	env.Append(LIBS = libs)
	env.Append(CPPPATH=[build.tp('microsoft', 'include')])
	env.Append(CPPDEFINES = ('WIN32_LEAN_AND_MEAN', 1))

m = build.add_module('ti.Media', env=env)
t = env.SharedLibrary(target = m.build_dir + '/timediamodule', source = sources)
build.mark_build_target(t)

